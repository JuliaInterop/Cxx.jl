# cenumvals.jl.h
# count = 0
#
# #define IMAGE_TYPE(ImgType, Id, SingletonId, Access, Suffix) const c ## Id = (count += 1; count - 1)
# #include "clang/Basic/OpenCLImageTypes.def"
# // OpenCL extension types
# #define EXT_OPAQUE_TYPE(ExtType, Id, Ext) const c ## Id = (count += 1; count - 1)
# #include "clang/Basic/OpenCLExtensionTypes.def"
# // SVE Types
# #define SVE_TYPE(Name, Id, SingletonId) const c ## Id = (count += 1; count - 1)
# #include "clang/Basic/AArch64SVEACLETypes.def"
# // PPC MMA Types
# #define PPC_VECTOR_TYPE(Name, Id, Size) const c ## Id = (count += 1; count - 1)
# #include "clang/Basic/PPCTypes.def"
# // All other builtin types
# #define BUILTIN_TYPE(Id, SingletonId) const c ## Id = (count += 1; count - 1)
# #define LAST_BUILTIN_TYPE(Id)
# #include "clang/AST/BuiltinTypes.def"
#
# count = 0
# #define DECL(DERIVED, BASE) const kind ## DERIVED = (count += 1; count - 1)
# #define ABSTRACT_DECL(DECL)
# #define DECL_RANGE(BASE, START, END)
# #define LAST_DECL_RANGE(BASE, START, END)
# #include "clang/AST/DeclNodes.inc"

count = 0
const cOCLImage1dRO = (count += 1; count - 1)
const cOCLImage1dArrayRO = (count += 1; count - 1)
const cOCLImage1dBufferRO = (count += 1; count - 1)
const cOCLImage2dRO = (count += 1; count - 1)
const cOCLImage2dArrayRO = (count += 1; count - 1)
const cOCLImage2dDepthRO = (count += 1; count - 1)
const cOCLImage2dArrayDepthRO = (count += 1; count - 1)
const cOCLImage2dMSAARO = (count += 1; count - 1)
const cOCLImage2dArrayMSAARO = (count += 1; count - 1)
const cOCLImage2dMSAADepthRO = (count += 1; count - 1)
const cOCLImage2dArrayMSAADepthRO = (count += 1; count - 1)
const cOCLImage3dRO = (count += 1; count - 1)
const cOCLImage1dWO = (count += 1; count - 1)
const cOCLImage1dArrayWO = (count += 1; count - 1)
const cOCLImage1dBufferWO = (count += 1; count - 1)
const cOCLImage2dWO = (count += 1; count - 1)
const cOCLImage2dArrayWO = (count += 1; count - 1)
const cOCLImage2dDepthWO = (count += 1; count - 1)
const cOCLImage2dArrayDepthWO = (count += 1; count - 1)
const cOCLImage2dMSAAWO = (count += 1; count - 1)
const cOCLImage2dArrayMSAAWO = (count += 1; count - 1)
const cOCLImage2dMSAADepthWO = (count += 1; count - 1)
const cOCLImage2dArrayMSAADepthWO = (count += 1; count - 1)
const cOCLImage3dWO = (count += 1; count - 1)
const cOCLImage1dRW = (count += 1; count - 1)
const cOCLImage1dArrayRW = (count += 1; count - 1)
const cOCLImage1dBufferRW = (count += 1; count - 1)
const cOCLImage2dRW = (count += 1; count - 1)
const cOCLImage2dArrayRW = (count += 1; count - 1)
const cOCLImage2dDepthRW = (count += 1; count - 1)
const cOCLImage2dArrayDepthRW = (count += 1; count - 1)
const cOCLImage2dMSAARW = (count += 1; count - 1)
const cOCLImage2dArrayMSAARW = (count += 1; count - 1)
const cOCLImage2dMSAADepthRW = (count += 1; count - 1)
const cOCLImage2dArrayMSAADepthRW = (count += 1; count - 1)
const cOCLImage3dRW = (count += 1; count - 1)
const cOCLIntelSubgroupAVCMcePayload = (count += 1; count - 1)
const cOCLIntelSubgroupAVCImePayload = (count += 1; count - 1)
const cOCLIntelSubgroupAVCRefPayload = (count += 1; count - 1)
const cOCLIntelSubgroupAVCSicPayload = (count += 1; count - 1)
const cOCLIntelSubgroupAVCMceResult = (count += 1; count - 1)
const cOCLIntelSubgroupAVCImeResult = (count += 1; count - 1)
const cOCLIntelSubgroupAVCRefResult = (count += 1; count - 1)
const cOCLIntelSubgroupAVCSicResult = (count += 1; count - 1)
const cOCLIntelSubgroupAVCImeResultSingleRefStreamout = (count += 1; count - 1)
const cOCLIntelSubgroupAVCImeResultDualRefStreamout = (count += 1; count - 1)
const cOCLIntelSubgroupAVCImeSingleRefStreamin = (count += 1; count - 1)
const cOCLIntelSubgroupAVCImeDualRefStreamin = (count += 1; count - 1)
const cSveInt8 = (count += 1; count - 1)
const cSveInt16 = (count += 1; count - 1)
const cSveInt32 = (count += 1; count - 1)
const cSveInt64 = (count += 1; count - 1)
const cSveUint8 = (count += 1; count - 1)
const cSveUint16 = (count += 1; count - 1)
const cSveUint32 = (count += 1; count - 1)
const cSveUint64 = (count += 1; count - 1)
const cSveFloat16 = (count += 1; count - 1)
const cSveFloat32 = (count += 1; count - 1)
const cSveFloat64 = (count += 1; count - 1)
const cSveBFloat16 = (count += 1; count - 1)
const cSveInt8x2 = (count += 1; count - 1)
const cSveInt16x2 = (count += 1; count - 1)
const cSveInt32x2 = (count += 1; count - 1)
const cSveInt64x2 = (count += 1; count - 1)
const cSveUint8x2 = (count += 1; count - 1)
const cSveUint16x2 = (count += 1; count - 1)
const cSveUint32x2 = (count += 1; count - 1)
const cSveUint64x2 = (count += 1; count - 1)
const cSveFloat16x2 = (count += 1; count - 1)
const cSveFloat32x2 = (count += 1; count - 1)
const cSveFloat64x2 = (count += 1; count - 1)
const cSveBFloat16x2 = (count += 1; count - 1)
const cSveInt8x3 = (count += 1; count - 1)
const cSveInt16x3 = (count += 1; count - 1)
const cSveInt32x3 = (count += 1; count - 1)
const cSveInt64x3 = (count += 1; count - 1)
const cSveUint8x3 = (count += 1; count - 1)
const cSveUint16x3 = (count += 1; count - 1)
const cSveUint32x3 = (count += 1; count - 1)
const cSveUint64x3 = (count += 1; count - 1)
const cSveFloat16x3 = (count += 1; count - 1)
const cSveFloat32x3 = (count += 1; count - 1)
const cSveFloat64x3 = (count += 1; count - 1)
const cSveBFloat16x3 = (count += 1; count - 1)
const cSveInt8x4 = (count += 1; count - 1)
const cSveInt16x4 = (count += 1; count - 1)
const cSveInt32x4 = (count += 1; count - 1)
const cSveInt64x4 = (count += 1; count - 1)
const cSveUint8x4 = (count += 1; count - 1)
const cSveUint16x4 = (count += 1; count - 1)
const cSveUint32x4 = (count += 1; count - 1)
const cSveUint64x4 = (count += 1; count - 1)
const cSveFloat16x4 = (count += 1; count - 1)
const cSveFloat32x4 = (count += 1; count - 1)
const cSveFloat64x4 = (count += 1; count - 1)
const cSveBFloat16x4 = (count += 1; count - 1)
const cSveBool = (count += 1; count - 1)
const cVectorQuad = (count += 1; count - 1)
const cVectorPair = (count += 1; count - 1)
const cVoid = (count += 1; count - 1)
const cBool = (count += 1; count - 1)
const cChar_U = (count += 1; count - 1)
const cUChar = (count += 1; count - 1)
const cWChar_U = (count += 1; count - 1)
const cChar16 = (count += 1; count - 1)
const cChar32 = (count += 1; count - 1)
const cUShort = (count += 1; count - 1)
const cUInt = (count += 1; count - 1)
const cULong = (count += 1; count - 1)
const cULongLong = (count += 1; count - 1)
const cUInt128 = (count += 1; count - 1)
const cChar_S = (count += 1; count - 1)
const cSChar = (count += 1; count - 1)
const cWChar_S = (count += 1; count - 1)
const cShort = (count += 1; count - 1)
const cInt = (count += 1; count - 1)
const cLong = (count += 1; count - 1)
const cLongLong = (count += 1; count - 1)
const cInt128 = (count += 1; count - 1)
const cShortAccum = (count += 1; count - 1)
const cAccum = (count += 1; count - 1)
const cLongAccum = (count += 1; count - 1)
const cUShortAccum = (count += 1; count - 1)
const cUAccum = (count += 1; count - 1)
const cULongAccum = (count += 1; count - 1)
const cShortFract = (count += 1; count - 1)
const cFract = (count += 1; count - 1)
const cLongFract = (count += 1; count - 1)
const cUShortFract = (count += 1; count - 1)
const cUFract = (count += 1; count - 1)
const cULongFract = (count += 1; count - 1)
const cSatShortAccum = (count += 1; count - 1)
const cSatAccum = (count += 1; count - 1)
const cSatLongAccum = (count += 1; count - 1)
const cSatUShortAccum = (count += 1; count - 1)
const cSatUAccum = (count += 1; count - 1)
const cSatULongAccum = (count += 1; count - 1)
const cSatShortFract = (count += 1; count - 1)
const cSatFract = (count += 1; count - 1)
const cSatLongFract = (count += 1; count - 1)
const cSatUShortFract = (count += 1; count - 1)
const cSatUFract = (count += 1; count - 1)
const cSatULongFract = (count += 1; count - 1)
const cHalf = (count += 1; count - 1)
const cFloat = (count += 1; count - 1)
const cDouble = (count += 1; count - 1)
const cLongDouble = (count += 1; count - 1)
const cFloat16 = (count += 1; count - 1)
const cBFloat16 = (count += 1; count - 1)
const cFloat128 = (count += 1; count - 1)
const cNullPtr = (count += 1; count - 1)
const cObjCId = (count += 1; count - 1)
const cObjCClass = (count += 1; count - 1)
const cObjCSel = (count += 1; count - 1)
const cOCLSampler = (count += 1; count - 1)
const cOCLEvent = (count += 1; count - 1)
const cOCLClkEvent = (count += 1; count - 1)
const cOCLQueue = (count += 1; count - 1)
const cOCLReserveID = (count += 1; count - 1)
const cDependent = (count += 1; count - 1)
const cOverload = (count += 1; count - 1)
const cBoundMember = (count += 1; count - 1)
const cPseudoObject = (count += 1; count - 1)
const cUnknownAny = (count += 1; count - 1)
const cBuiltinFn = (count += 1; count - 1)
const cARCUnbridgedCast = (count += 1; count - 1)
const cIncompleteMatrixIdx = (count += 1; count - 1)
const cOMPArraySection = (count += 1; count - 1)
const cOMPArrayShaping = (count += 1; count - 1)
const cOMPIterator = (count += 1; count - 1)
count = 0
const kindAccessSpec = (count += 1; count - 1)
const kindBlock = (count += 1; count - 1)
const kindCaptured = (count += 1; count - 1)
const kindClassScopeFunctionSpecialization = (count += 1; count - 1)
const kindEmpty = (count += 1; count - 1)
const kindExport = (count += 1; count - 1)
const kindExternCContext = (count += 1; count - 1)
const kindFileScopeAsm = (count += 1; count - 1)
const kindFriend = (count += 1; count - 1)
const kindFriendTemplate = (count += 1; count - 1)
const kindImport = (count += 1; count - 1)
const kindLifetimeExtendedTemporary = (count += 1; count - 1)
const kindLinkageSpec = (count += 1; count - 1)
const kindLabel = (count += 1; count - 1)
const kindNamespace = (count += 1; count - 1)
const kindNamespaceAlias = (count += 1; count - 1)
const kindObjCCompatibleAlias = (count += 1; count - 1)
const kindObjCCategory = (count += 1; count - 1)
const kindObjCCategoryImpl = (count += 1; count - 1)
const kindObjCImplementation = (count += 1; count - 1)
const kindObjCInterface = (count += 1; count - 1)
const kindObjCProtocol = (count += 1; count - 1)
const kindObjCMethod = (count += 1; count - 1)
const kindObjCProperty = (count += 1; count - 1)
const kindBuiltinTemplate = (count += 1; count - 1)
const kindConcept = (count += 1; count - 1)
const kindClassTemplate = (count += 1; count - 1)
const kindFunctionTemplate = (count += 1; count - 1)
const kindTypeAliasTemplate = (count += 1; count - 1)
const kindVarTemplate = (count += 1; count - 1)
const kindTemplateTemplateParm = (count += 1; count - 1)
const kindEnum = (count += 1; count - 1)
const kindRecord = (count += 1; count - 1)
const kindCXXRecord = (count += 1; count - 1)
const kindClassTemplateSpecialization = (count += 1; count - 1)
const kindClassTemplatePartialSpecialization = (count += 1; count - 1)
const kindTemplateTypeParm = (count += 1; count - 1)
const kindObjCTypeParam = (count += 1; count - 1)
const kindTypeAlias = (count += 1; count - 1)
const kindTypedef = (count += 1; count - 1)
const kindUnresolvedUsingTypename = (count += 1; count - 1)
const kindUsing = (count += 1; count - 1)
const kindUsingDirective = (count += 1; count - 1)
const kindUsingPack = (count += 1; count - 1)
const kindUsingShadow = (count += 1; count - 1)
const kindConstructorUsingShadow = (count += 1; count - 1)
const kindBinding = (count += 1; count - 1)
const kindField = (count += 1; count - 1)
const kindObjCAtDefsField = (count += 1; count - 1)
const kindObjCIvar = (count += 1; count - 1)
const kindFunction = (count += 1; count - 1)
const kindCXXDeductionGuide = (count += 1; count - 1)
const kindCXXMethod = (count += 1; count - 1)
const kindCXXConstructor = (count += 1; count - 1)
const kindCXXConversion = (count += 1; count - 1)
const kindCXXDestructor = (count += 1; count - 1)
const kindMSProperty = (count += 1; count - 1)
const kindNonTypeTemplateParm = (count += 1; count - 1)
const kindVar = (count += 1; count - 1)
const kindDecomposition = (count += 1; count - 1)
const kindImplicitParam = (count += 1; count - 1)
const kindOMPCapturedExpr = (count += 1; count - 1)
const kindParmVar = (count += 1; count - 1)
const kindVarTemplateSpecialization = (count += 1; count - 1)
const kindVarTemplatePartialSpecialization = (count += 1; count - 1)
const kindEnumConstant = (count += 1; count - 1)
const kindIndirectField = (count += 1; count - 1)
const kindMSGuid = (count += 1; count - 1)
const kindOMPDeclareMapper = (count += 1; count - 1)
const kindOMPDeclareReduction = (count += 1; count - 1)
const kindTemplateParamObject = (count += 1; count - 1)
const kindUnresolvedUsingValue = (count += 1; count - 1)
const kindOMPAllocate = (count += 1; count - 1)
const kindOMPRequires = (count += 1; count - 1)
const kindOMPThreadPrivate = (count += 1; count - 1)
const kindObjCPropertyImpl = (count += 1; count - 1)
const kindPragmaComment = (count += 1; count - 1)
const kindPragmaDetectMismatch = (count += 1; count - 1)
const kindRequiresExprBody = (count += 1; count - 1)
const kindStaticAssert = (count += 1; count - 1)
const kindTranslationUnit = (count += 1; count - 1)
